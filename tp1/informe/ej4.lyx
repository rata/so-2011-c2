#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section*
Ejercico 4
\end_layout

\begin_layout Standard
Para mostrar que el comportamiento es el esperado se hicieron algunas pruebas.
 La primera consiste de dos tareas que usan 10 ciclos cada una de CPU.
 El quantum usado es 5, por lo que se ve que cambian a los 5 ciclos.
 En total se usa un ciclo mas (11 ciclos) porque, según pudimos debugguear
 el simulador, un ciclo se usa al cargar la tarea por primera vez (y aunque
 esta tarea no se esta ejecutando se le atribuye el tiempo de CPU)
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../code/ej4-gr1.png
	width 16cm

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La segunda consiste también en dos tareas, pero en este caso cada un hace:
 5 ciclos de CPU y luego 2 ciclos IO.
 Y como quantum se usó 5 ciclos también.
\end_layout

\begin_layout Standard
El primer ciclo de ambas tareas no es ocupado por la tarea en sí, sino que
 es necesario al cargar la tarea por primera vez.
 Luego hace los 5 ciclos de CPU, interrumpidos porque se excede el quantum
 y switchea a la otra tarea, y luego se bloquea 2 ciclos.
 Desspués de desbloquearse se utiliza un ciclo de CPU más porque al desbloquears
e la tarea se consume un ciclo.
 Es importante notar que cuando ambas tareas estan bloqueadas se ejecuta
 la tarea idle y ni bien se desbloquea una se la ejecuta.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../code/ej4-gr2.png
	width 16cm

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La tercer prueba consistió en solo una tarea ejecutando, para verificar
 que no haya ningún problema con este caso 
\begin_inset Quotes eld
\end_inset

borde
\begin_inset Quotes erd
\end_inset

 y que se le renueve el quantum:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../code/ej4-gr3.png
	width 16cm

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La cuarta prueba es similar a la anterior, pero se probó que se le renueve
 el quantum si la otra tarea sigue bloqueada, como muestra el gráfico a
 continuación:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../code/ej4-gr4.png
	width 16cm

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
